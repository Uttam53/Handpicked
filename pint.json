{
    "rules": {
        "spaces_inside_parentheses": {
            "space": "none"
        },
        "assign_null_coalescing_to_coalesce_equal": true,
        "no_useless_else": true,
        "simplified_if_return": true,
        "concat_space": {
            "spacing": "one"
        },
        "not_operator_with_space": false,
        "not_operator_with_successor_space": false,
        "array_indentation": true,
        "cast_spaces": {
            "space": "single"
        },
        "group_import": {
            "group_types": [
                "classy",
                "functions",
                "constants"
            ]
        },
        "single_import_per_statement": false,
        "lowercase_cast": true,
        "return_type_declaration": {
            "space_before": "none"
        },
        "class_attributes_separation": {
            "elements": {
                "const": "one",
                "method": "one",
                "property": "one",
                "trait_import": "none",
                "case": "none"
            }
        },
        "no_blank_lines_after_class_opening": true,
        "clean_namespace": true,
        "combine_consecutive_issets": true,
        "combine_consecutive_unsets": true,
        "fully_qualified_strict_types": {
            "import_symbols": true,
            "leading_backslash_in_global_namespace": true,
            "phpdoc_tags": [
                "param",
                "phpstan-param",
                "phpstan-property",
                "phpstan-property-read",
                "phpstan-property-write",
                "phpstan-return",
                "phpstan-var",
                "property",
                "property-read",
                "property-write",
                "psalm-param",
                "psalm-property",
                "psalm-property-read",
                "psalm-property-write",
                "psalm-return",
                "psalm-var",
                "return",
                "see",
                "throws",
                "var"
            ]
        },
        "function_typehint_space": true,
        "lambda_not_used_import": true,
        "short_scalar_cast": true,
        "magic_constant_casing": true,
        "magic_method_casing": true,
        "native_function_casing": true,
        "native_type_declaration_casing": true,
        "method_argument_space": {
            "on_multiline": "ensure_fully_multiline",
            "keep_multiple_spaces_after_comma": true,
            "after_heredoc": true,
            "attribute_placement": "same_line"
        },
        "method_chaining_indentation": true,
        "multiline_comment_opening_closing": true,
        "no_alias_language_construct_call": true,
        "no_alternative_syntax": {
            "fix_non_monolithic_code": true
        },
        "no_empty_comment": true,
        "no_trailing_whitespace_in_comment": true,
        "no_empty_statement": true,
        "no_extra_blank_lines": {
            "tokens": [
                "attribute",
                "break",
                "case",
                "continue",
                "curly_brace_block",
                "default",
                "extra",
                "parenthesis_brace_block",
                "return",
                "square_brace_block",
                "switch",
                "throw",
                "use",
                "use_trait"
            ]
        },
        "no_leading_namespace_whitespace": true,
        "no_mixed_echo_print": {
            "use": "echo"
        },
        "no_multiline_whitespace_around_double_arrow": true,
        "no_multiple_statements_per_line": true,
        "no_singleline_whitespace_before_semicolons": true,
        "no_spaces_around_offset": {
            "positions": [
                "inside",
                "outside"
            ]
        },
        "no_unneeded_import_alias": true,
        "no_unused_imports": true,
        "no_whitespace_before_comma_in_array": {
            "after_heredoc": true
        },
        "no_whitespace_in_blank_line": true,
        "no_short_bool_cast": true,
        "no_null_property_initialization": true,
        "no_spaces_after_function_name": true,
        "no_leading_import_slash": true,
        "no_trailing_whitespace": true,
        "no_unneeded_braces": {
            "namespaces": false
        },
        "no_unneeded_control_parentheses": {
            "statements": [
                "break",
                "clone",
                "continue",
                "echo_print",
                "negative_instanceof",
                "others",
                "return",
                "switch_case",
                "yield",
                "yield_from"
            ]
        },
        "nullable_type_declaration_for_default_null_value": {
            "use_nullable_type_declaration": true
        },
        "php_unit_fqcn_annotation": true,
        "phpdoc_line_span": {
            "const": "single",
            "method": "single",
            "property": "single"
        },
        "phpdoc_scalar": {
            "types": [
                "boolean",
                "callback",
                "double",
                "integer",
                "real",
                "str"
            ]
        },
        "phpdoc_single_line_var_spacing": true,
        "phpdoc_var_without_name": true,
        "simple_to_complex_string_variable": true,
        "standardize_not_equals": true,
        "trailing_comma_in_multiline": {
            "after_heredoc": true,
            "elements": [
                "arguments",
                "arrays",
                "match",
                "parameters"
            ]
        },
        "trim_array_spaces": true,
        "types_spaces": {
            "space": "none",
            "space_multiple_catch": "none"
        },
        "unary_operator_spaces": {
            "only_dec_inc": false
        },
        "no_superfluous_elseif": true,
        "octal_notation": true,
        "numeric_literal_separator": {
            "strategy": "no_separator"
        },
        "constant_case": {
            "case": "lower"
        },
        "integer_literal_case": true,
        "ordered_class_elements": {
            "case_sensitive": false,
            "order": [
                "use_trait",
                "case",
                "constant_public",
                "constant_protected",
                "constant_private",
                "property_public",
                "property_public_readonly",
                "property_public_static",
                "property_protected",
                "property_protected_readonly",
                "property_protected_static",
                "property_private",
                "property_private_readonly",
                "property_private_static",
                "construct",
                "destruct",
                "magic",
                "phpunit",
                "method_public",
                "method_public_static",
                "method_public_abstract",
                "method_public_abstract_static",
                "method_protected",
                "method_protected_static",
                "method_protected_abstract",
                "method_protected_abstract_static",
                "method_private",
                "method_private_static",
                "method_private_abstract",
                "method_private_abstract_static"
            ],
            "sort_algorithm": "none"
        },
        "ordered_interfaces": {
            "case_sensitive": false,
            "direction": "ascend",
            "order": "alpha"
        },
        "ordered_types": {
            "case_sensitive": false,
            "null_adjustment": "always_last"
        },
        "protected_to_private": true,
        "self_static_accessor": true,
        "single_class_element_per_statement": {
            "elements": [
                "const",
                "property"
            ]
        },
        "single_trait_insert_per_statement": true,
        "visibility_required": {
            "elements": [
                "const",
                "method",
                "property"
            ]
        },
        "control_structure_continuation_position": {
            "position": "same_line"
        },
        "include": true,
        "switch_case_semicolon_to_colon": true,
        "switch_case_space": true,
        "switch_continue_to_break": true,
        "function_declaration": {
            "closure_fn_spacing": "one",
            "closure_function_spacing": "one",
            "trailing_comma_single_line": false
        },
        "single_line_throw": true,
        "ordered_imports": {
            "case_sensitive": false,
            "sort_algorithm": "alpha",
            "imports_order": [
                "const",
                "class",
                "function"
            ]
        },
        "single_line_after_imports": true,
        "declare_equal_normalize": {
            "space": "none"
        },
        "declare_parentheses": true,
        "explicit_indirect_variable": true,
        "nullable_type_declaration": {
            "syntax": "question_mark"
        },
        "statement_indentation": {
            "stick_comment_to_next_continuous_control_statement": false
        },
        "type_declaration_spaces": {
            "elements": [
                "function",
                "property"
            ]
        },
        "backtick_to_shell_exec": true,
        "normalize_index_brace": true,
        "return_to_yield_from": true,
        "attribute_empty_parentheses": {
            "use_parentheses": false
        },
        "ordered_attributes": {
            "sort_algorithm": "alpha"
        },
        "braces_position": {
            "allow_single_line_anonymous_functions": true,
            "allow_single_line_empty_anonymous_classes": true,
            "anonymous_classes_opening_brace": "same_line",
            "anonymous_functions_opening_brace": "same_line",
            "classes_opening_brace": "next_line_unless_newline_at_signature_end",
            "control_structures_opening_brace": "same_line",
            "functions_opening_brace": "next_line_unless_newline_at_signature_end"
        },
        "encoding": true,
        "class_reference_name_casing": true,
        "lowercase_keywords": true,
        "lowercase_static_reference": true,
        "single_line_comment_style": {
            "comment_types": [
                "asterisk",
                "hash"
            ]
        },
        "empty_loop_body": {
            "style": "semicolon"
        },
        "empty_loop_condition": {
            "style": "while"
        },
        "single_line_comment_spacing": true,
        "align_multiline_comment": {
            "comment_type": "phpdocs_like"
        },
        "no_blank_lines_after_phpdoc": true,
        "phpdoc_align": {
            "align": "vertical",
            "spacing": 1
        },
        "phpdoc_annotation_without_dot": true,
        "phpdoc_array_type": true,
        "phpdoc_indent": true,
        "phpdoc_list_type": true,
        "phpdoc_no_alias_tag": {
            "replacements": {
                "property-read": "property",
                "property-write": "property",
                "type": "var",
                "link": "see"
            }
        },
        "phpdoc_no_empty_return": true,
        "phpdoc_no_useless_inheritdoc": true,
        "phpdoc_order": {
            "order": [
                "param",
                "throws",
                "return"
            ]
        },
        "phpdoc_return_self_reference": {
            "replacements": {
                "this": "$this",
                "@this": "$this",
                "$self": "self",
                "@self": "self",
                "$static": "static",
                "@static": "static"
            }
        },
        "phpdoc_trim_consecutive_blank_line_separation": true,
        "phpdoc_trim": true,
        "phpdoc_types": {
            "groups": [
                "alias",
                "meta",
                "simple"
            ]
        },
        "phpdoc_var_annotation_correct_order": true,
        "phpdoc_types_order": {
            "case_sensitive": false,
            "null_adjustment": "always_last",
            "sort_algorithm": "alpha"
        },
        "no_useless_return": true,
        "return_assignment": true,
        "simplified_null_return": true,
        "yoda_style": {
            "always_move_variable": false,
            "equal": false,
            "identical": false,
            "less_and_greater": null
        },
        "modernize_strpos": true,
        "modernize_types_casting": true,
        "no_php4_constructor": true,
        "ordered_traits": {
            "case_sensitive": false
        },
        "self_accessor": true,
        "combine_nested_dirname": true,
        "implode_call": true,
        "no_useless_sprintf": true,
        "dir_constant": true,
        "get_class_to_class_keyword": true,
        "is_null": true,
        "ternary_to_elvis_operator": true,
        "string_length_to_empty": true,
        "array_push": true,
        "ereg_to_preg": true,
        "mb_str_functions": true,
        "no_alias_functions": {
            "sets": [
                "@all",
                "@exif",
                "@ftp",
                "@IMAP",
                "@internal",
                "@ldap",
                "@mbreg",
                "@mysqli",
                "@oci",
                "@odbc",
                "@openssl",
                "@pcntl",
                "@pg",
                "@posix",
                "@snmp",
                "@sodium",
                "@time"
            ]
        },
        "pow_to_exponentiation": true,
        "random_api_migration": {
            "replacements": {
                "getrandmax": "mt_getrandmax",
                "rand": "mt_rand",
                "srand": "mt_srand"
            }
        },
        "set_type_to_cast": true,
        "array_syntax": {
            "syntax": "short"
        },
        "whitespace_after_comma_in_array": {
            "ensure_single_space": true
        },
        "no_trailing_comma_in_singleline": {
            "elements": [
                "arguments",
                "array",
                "array_destructuring",
                "group_import"
            ]
        },
        "single_line_empty_body": true,
        "class_definition": {
            "inline_constructor_arguments": true,
            "multi_line_extends_each_single_line": false,
            "single_item_single_line": true,
            "single_line": true,
            "space_before_parenthesis": false
        },
        "phpdoc_readonly_class_comment_to_keyword": true,
        "control_structure_braces": true,
        "elseif": true,
        "doctrine_annotation_array_assignment": {
            "operator": "=",
            "ignored_tags": [
                "abstract",
                "access",
                "code",
                "deprec",
                "encode",
                "exception",
                "final",
                "ingroup",
                "inheritdoc",
                "inheritDoc",
                "magic",
                "name",
                "toc",
                "tutorial",
                "private",
                "static",
                "staticvar",
                "staticVar",
                "throw",
                "api",
                "author",
                "category",
                "copyright",
                "deprecated",
                "example",
                "filesource",
                "global",
                "ignore",
                "internal",
                "license",
                "link",
                "method",
                "package",
                "param",
                "property",
                "property-read",
                "property-write",
                "return",
                "see",
                "since",
                "source",
                "subpackage",
                "throws",
                "todo",
                "TODO",
                "usedBy",
                "uses",
                "var",
                "version",
                "after",
                "afterClass",
                "backupGlobals",
                "backupStaticAttributes",
                "before",
                "beforeClass",
                "codeCoverageIgnore",
                "codeCoverageIgnoreStart",
                "codeCoverageIgnoreEnd",
                "covers",
                "coversDefaultClass",
                "coversNothing",
                "dataProvider",
                "depends",
                "expectedException",
                "expectedExceptionCode",
                "expectedExceptionMessage",
                "expectedExceptionMessageRegExp",
                "group",
                "large",
                "medium",
                "preserveGlobalState",
                "requires",
                "runTestsInSeparateProcesses",
                "runInSeparateProcess",
                "small",
                "test",
                "testdox",
                "ticket",
                "uses",
                "SuppressWarnings",
                "noinspection",
                "package_version",
                "enduml",
                "startuml",
                "psalm",
                "phpstan",
                "template",
                "fix",
                "FIXME",
                "fixme",
                "override"
            ]
        },
        "doctrine_annotation_braces": {
            "syntax": "without_braces",
            "ignored_tags": [
                "abstract",
                "access",
                "code",
                "deprec",
                "encode",
                "exception",
                "final",
                "ingroup",
                "inheritdoc",
                "inheritDoc",
                "magic",
                "name",
                "toc",
                "tutorial",
                "private",
                "static",
                "staticvar",
                "staticVar",
                "throw",
                "api",
                "author",
                "category",
                "copyright",
                "deprecated",
                "example",
                "filesource",
                "global",
                "ignore",
                "internal",
                "license",
                "link",
                "method",
                "package",
                "param",
                "property",
                "property-read",
                "property-write",
                "return",
                "see",
                "since",
                "source",
                "subpackage",
                "throws",
                "todo",
                "TODO",
                "usedBy",
                "uses",
                "var",
                "version",
                "after",
                "afterClass",
                "backupGlobals",
                "backupStaticAttributes",
                "before",
                "beforeClass",
                "codeCoverageIgnore",
                "codeCoverageIgnoreStart",
                "codeCoverageIgnoreEnd",
                "covers",
                "coversDefaultClass",
                "coversNothing",
                "dataProvider",
                "depends",
                "expectedException",
                "expectedExceptionCode",
                "expectedExceptionMessage",
                "expectedExceptionMessageRegExp",
                "group",
                "large",
                "medium",
                "preserveGlobalState",
                "requires",
                "runTestsInSeparateProcesses",
                "runInSeparateProcess",
                "small",
                "test",
                "testdox",
                "ticket",
                "uses",
                "SuppressWarnings",
                "noinspection",
                "package_version",
                "enduml",
                "startuml",
                "psalm",
                "phpstan",
                "template",
                "fix",
                "FIXME",
                "fixme",
                "override"
            ]
        },
        "doctrine_annotation_indentation": {
            "indent_mixed_lines": true,
            "ignored_tags": [
                "abstract",
                "access",
                "code",
                "deprec",
                "encode",
                "exception",
                "final",
                "ingroup",
                "inheritdoc",
                "inheritDoc",
                "magic",
                "name",
                "toc",
                "tutorial",
                "private",
                "static",
                "staticvar",
                "staticVar",
                "throw",
                "api",
                "author",
                "category",
                "copyright",
                "deprecated",
                "example",
                "filesource",
                "global",
                "ignore",
                "internal",
                "license",
                "link",
                "method",
                "package",
                "param",
                "property",
                "property-read",
                "property-write",
                "return",
                "see",
                "since",
                "source",
                "subpackage",
                "throws",
                "todo",
                "TODO",
                "usedBy",
                "uses",
                "var",
                "version",
                "after",
                "afterClass",
                "backupGlobals",
                "backupStaticAttributes",
                "before",
                "beforeClass",
                "codeCoverageIgnore",
                "codeCoverageIgnoreStart",
                "codeCoverageIgnoreEnd",
                "covers",
                "coversDefaultClass",
                "coversNothing",
                "dataProvider",
                "depends",
                "expectedException",
                "expectedExceptionCode",
                "expectedExceptionMessage",
                "expectedExceptionMessageRegExp",
                "group",
                "large",
                "medium",
                "preserveGlobalState",
                "requires",
                "runTestsInSeparateProcesses",
                "runInSeparateProcess",
                "small",
                "test",
                "testdox",
                "ticket",
                "uses",
                "SuppressWarnings",
                "noinspection",
                "package_version",
                "enduml",
                "startuml",
                "psalm",
                "phpstan",
                "template",
                "fix",
                "FIXME",
                "fixme",
                "override"
            ]
        },
        "doctrine_annotation_spaces": {
            "after_argument_assignments": false,
            "after_array_assignments_colon": true,
            "after_array_assignments_equals": true,
            "around_commas": true,
            "around_parentheses": true,
            "before_argument_assignments": false,
            "before_array_assignments_colon": true,
            "before_array_assignments_equals": true,
            "ignored_tags": [
                "abstract",
                "access",
                "code",
                "deprec",
                "encode",
                "exception",
                "final",
                "ingroup",
                "inheritdoc",
                "inheritDoc",
                "magic",
                "name",
                "toc",
                "tutorial",
                "private",
                "static",
                "staticvar",
                "staticVar",
                "throw",
                "api",
                "author",
                "category",
                "copyright",
                "deprecated",
                "example",
                "filesource",
                "global",
                "ignore",
                "internal",
                "license",
                "link",
                "method",
                "package",
                "param",
                "property",
                "property-read",
                "property-write",
                "return",
                "see",
                "since",
                "source",
                "subpackage",
                "throws",
                "todo",
                "TODO",
                "usedBy",
                "uses",
                "var",
                "version",
                "after",
                "afterClass",
                "backupGlobals",
                "backupStaticAttributes",
                "before",
                "beforeClass",
                "codeCoverageIgnore",
                "codeCoverageIgnoreStart",
                "codeCoverageIgnoreEnd",
                "covers",
                "coversDefaultClass",
                "coversNothing",
                "dataProvider",
                "depends",
                "expectedException",
                "expectedExceptionCode",
                "expectedExceptionMessage",
                "expectedExceptionMessageRegExp",
                "group",
                "large",
                "medium",
                "preserveGlobalState",
                "requires",
                "runTestsInSeparateProcesses",
                "runInSeparateProcess",
                "small",
                "test",
                "testdox",
                "ticket",
                "uses",
                "SuppressWarnings",
                "noinspection",
                "package_version",
                "enduml",
                "startuml",
                "psalm",
                "phpstan",
                "template",
                "fix",
                "FIXME",
                "fixme",
                "override"
            ]
        },
        "fopen_flag_order": true,
        "fopen_flags": {
            "b_mode": true
        },
        "regular_callable_call": true,
        "function_to_constant": {
            "functions": [
                "get_called_class",
                "get_class",
                "get_class_this",
                "php_sapi_name",
                "phpversion",
                "pi"
            ]
        },
        "single_space_around_construct": {
            "constructs_contain_a_single_space": [
                "yield_from"
            ],
            "constructs_followed_by_a_single_space": [
                "abstract",
                "as",
                "attribute",
                "break",
                "case",
                "catch",
                "class",
                "clone",
                "comment",
                "const",
                "const_import",
                "continue",
                "do",
                "echo",
                "else",
                "elseif",
                "enum",
                "extends",
                "final",
                "finally",
                "for",
                "foreach",
                "function",
                "function_import",
                "global",
                "goto",
                "if",
                "implements",
                "include",
                "include_once",
                "instanceof",
                "insteadof",
                "interface",
                "match",
                "named_argument",
                "namespace",
                "new",
                "open_tag_with_echo",
                "php_doc",
                "php_open",
                "print",
                "private",
                "protected",
                "public",
                "readonly",
                "require",
                "require_once",
                "return",
                "static",
                "switch",
                "throw",
                "trait",
                "try",
                "type_colon",
                "use",
                "use_lambda",
                "use_trait",
                "var",
                "while",
                "yield",
                "yield_from"
            ],
            "constructs_preceded_by_a_single_space": [
                "as",
                "use_lambda"
            ]
        },
        "list_syntax": {
            "syntax": "short"
        },
        "blank_line_after_namespace": true,
        "blank_lines_before_namespace": true,
        "binary_operator_spaces": {
            "default": "single_space"
        },
        "increment_style": {
            "style": "pre"
        },
        "logical_operators": true,
        "long_to_shorthand_operator": true,
        "no_space_around_double_colon": true,
        "no_useless_concat_operator": {
            "juggle_simple_strings": true
        },
        "no_useless_nullsafe_operator": true,
        "object_operator_without_whitespace": true,
        "standardize_increment": true,
        "ternary_operator_spaces": true,
        "ternary_to_null_coalescing": true,
        "blank_line_after_opening_tag": true,
        "echo_tag_syntax": {
            "format": "long",
            "long_function": "echo",
            "shorten_simple_statements_only": true
        },
        "full_opening_tag": true,
        "linebreak_after_opening_tag": true,
        "no_closing_tag": true,
        "multiline_whitespace_before_semicolons": {
            "strategy": "no_multi_line"
        },
        "semicolon_after_instruction": true,
        "space_after_semicolon": true,
        "no_binary_string": true,
        "explicit_string_variable": true,
        "single_quote": false,
        "blank_line_before_statement": {
            "statements": [
                "break",
                "continue",
                "declare",
                "return",
                "throw",
                "try",
                "do",
                "exit",
                "case",
                "default",
                "for",
                "foreach",
                "goto",
                "if",
                "include",
                "include_once",
                "phpdoc",
                "require",
                "require_once",
                "switch",
                "while",
                "yield",
                "yield_from"
            ]
        },
        "blank_line_between_import_groups": true,
        "compact_nullable_type_declaration": true,
        "indentation_type": true,
        "single_blank_line_at_eof": true,
        "phpdoc_to_comment": {
            "allow_before_return_statement": true
        }
    },
    "exclude": [
        "config",
        "database/migrations"
    ]
}
